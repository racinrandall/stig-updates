---
- name: Install fipscheck package
  package:
    name: fipscheck
    state: latest

- name: "PRELIM | RHEL-08-010690 | Gather local interactive user directories"
  # shell: "getent passwd { {{ rhel8stig_int_gid }}..65535} | cut -d: -f6 | sort -u | grep -v '/var/' | grep -v '/nonexistent/*' | grep -v '/run/*'"
  shell: "getent passwd {'{{ rhel8stig_int_gid }}'..24339} | cut -d: -f6 | sort -u | grep -v '/var/' | grep -v '/nonexistent/*' | grep -v '/run/*'"
  args:
      warn: no
  register: rhel_08_010690_getent
  changed_when: rhel_08_020680_getent.stdout_lines is defined
  failed_when: false

- name: "PRELIM | RHEL-08-010690 | Set fact for home directory paths for interactive users"
  set_fact:
      rhel_08_stig_interactive_homedir_results: "{{ rhel_08_010690_getent.stdout_lines }}"
  when: rhel_08_010690_getent.stdout_lines is defined

- name: "PRELIM | RHEL-08-010020 | RHEL-08-010140 | RHEL-08-010150 | Check whether machine is UEFI-based"
  stat:
      path: /sys/firmware/efi
  register: rhel_08_sys_firmware_efi
  
- name: "PRELIM | RHEL-08-010020 | Check if /boot or /boot/efi reside on separate partitions"
  shell: df --output=target /boot | tail -n 1
  args:
      warn: no
  changed_when: no
  check_mode: no
  register: rhel_08_boot_part

- name: "MEDIUM | RHEL-08-010660 | RHEL-08-010770 | AUDIT | Find ini files for interactive users."
  shell: find "{{ item }}" -maxdepth 1 -type f | awk -F"/" '$NF ~ /^\..*$/ {print $NF}' | grep -v history
  args:
      warn: no
  with_items: "{{ rhel_08_stig_interactive_homedir_results }}"
  register: rhel_08_010770_ini_file_list
  changed_when: no
  failed_when: false

- name: "MEDIUM | RHEL-08-010660 | RHEL-08-010770 | Set fact for home directory paths for interactive users"
  set_fact:
      rhel_08_stig_interactive_homedir_inifiles: "{{ rhel_08_010770_ini_file_list.results | map(attribute='stdout_lines') | list }}"

- name: remove unneeded audit rules before applying proper rules
  file:
    path: /etc/audit/rules.d
    state: absent

- name: create rules dir
  file:
    path: /etc/audit/rules.d
    state: directory

- name: Apply Audit Rules
  template:
    src: audit.rules.j2
    dest: /etc/audit/rules.d/audit.rules
  notify: restart_auditd

- name: "MEDIUM | RHEL-08-010070 | PATCH | All RHEL 8 remote access methods must be monitored."
  lineinfile:
      path: /etc/rsyslog.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      create: yes
      mode: '0644'
  notify: restart rsyslog
  with_items:
      - { regexp: '^auth.*', line: 'auth.*,authpriv.* /var/log/secure' }
      - { regexp: '^daemon.*', line: 'daemon.* /var/log/messages' }

- name: "MEDIUM | RHEL-08-010130 | PATCH | RHEL 8 must employ FIPS 140-2 approved cryptographic hashing algorithms for all created passwords. | Add rounds argument"
  pamd:
      name: "{{ item }}"
      type: password
      control: sufficient
      module_path: pam_unix.so
      module_arguments: "rounds={{ rhel8stig_hashing_rounds }}"
      state: args_present
  with_items:
      - password-auth
      - system-auth

- name: |
        "HIGH | RHEL-08-010140 | PATCH | RHEL 8 operating systems booted with United Extensible Firmware Interface (UEFI) implemented must require authentication upon booting into single-user mode and maintenance."
        "HIGH | RHEL-08-010150 | PATCH | RHEL 8 operating systems booted with a BIOS must require authentication upon booting into single-user and maintenance modes."
  block:
      # the createuser.cfg task is a workaround for the the ansible bug https://github.com/ansible/ansible/pull/59823
      - name: |
              "HIGH | RHEL-08-010140 | PATCH | RHEL 8 operating systems booted with United Extensible Firmware Interface (UEFI) implemented must require authentication upon booting into single-user mode and maintenance. | Create user.cfg"
              "HIGH | RHEL-08-010150 | PATCH | RHEL 8 operating systems booted with a BIOS must require authentication upon booting into single-user and maintenance modes. | Create user.cfg"
        shell: test -f {{ file_q }} && echo exists || {{ create_cmd }}
        args:
            warn: no
        check_mode: "{{ ansible_check_mode is not defined }}"
        register: rhel8stig_create_grub_user_cfg
        changed_when:
            - rhel8stig_create_grub_user_cfg.stdout == "created"
        failed_when:
            - rhel8stig_create_grub_user_cfg.stdout != "created"
            - rhel8stig_create_grub_user_cfg.stdout != "exists"
        vars:
            file_q: "{{ (rhel8stig_grub_cfg_path | dirname ~ '/user.cfg') | quote }}"
            create_cmd: "({{ ansible_check_mode | ternary('', 'touch ' ~ file_q ~ ' && ') }}echo created)"

      - name: |
              "HIGH | RHEL-08-010140 | PATCH | RHEL 8 operating systems booted with United Extensible Firmware Interface (UEFI) implemented must require authentication upon booting into single-user mode and maintenance. | Set Grub Password"
              "HIGH | RHEL-08-010150 | PATCH | RHEL 8 operating systems booted with a BIOS must require authentication upon booting into single-user and maintenance modes. | Set Grub Password"
        lineinfile:
            path: "{{ rhel8stig_grub_cfg_path | dirname }}/user.cfg"
            create: yes
            regexp: ^GRUB2_PASSWORD=
            line: GRUB2_PASSWORD={{ rhel8stig_bootloader_password_hash }}
            owner: root
            group: root
            mode: 0640
        notify: confirm grub2 user cfg

      - name: |
              "HIGH | RHEL-08-010140 | PATCH | RHEL 8 operating systems booted with United Extensible Firmware Interface (UEFI) implemented must require authentication upon booting into single-user mode and maintenance. | Set UEFI superusers"
              "HIGH | RHEL-08-010150 | PATCH | RHEL 8 operating systems booted with a BIOS must require authentication upon booting into single-user and maintenance modes. | Set UEFI superusers"
        lineinfile:
            dest: "{{ rhel8stig_grub_cfg_path | dirname }}/grub.cfg"
            regexp: '^set superusers'
            line: 'set superusers="{{ rhel8stig_boot_superuser }}"'
            insertafter: '### BEGIN /etc/grub.d/01_users ###'
        notify: confirm grub2 user cfg

- name: "MEDIUM | RHEL-08-010160 | PATCH | The RHEL 8 pam_unix.so module must use a FIPS 140-2 approved cryptographic hashing algorithm for system authentication. | Add sha512 argument"
  pamd:
      name: "{{ item }}"
      type: password
      control: sufficient
      module_path: pam_unix.so
      module_arguments: sha512
      state: args_present
  with_items:
      - password-auth
      - system-auth

- name: "MEDIUM | RHEL-08-010200 | PATCH | RHEL 8 must be configured so that all network connections associated with SSH traffic are terminated at the end of the session or after 10 minutes of inactivity, except to fulfill documented and validated mission requirements."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
  notify: restart sshd
  with_items:
      - { regexp: '(?i)^#?ClientAliveInterval.*', line: 'ClientAliveInterval {{ rhel8stig_ssh_session_timeout }}'}
      - { regexp: '(?i)^#?ClientAliveCountMax.*', line: 'ClientAliveCountMax 0' }

- name: |
    "MEDIUM | RHEL-08-010290 | PATCH | The RHEL 8 SSH daemon must be configured to use only Message Authentication Codes (MACs) and ciphers employing FIPS 140-2 validated cryptographic hash algorithms."
    "MEDIUM | RHEL-08-010291 | PATCH | RHEL 8 must implement DoD-approved encryption to protect the confidentiality of SSH connections"
  block:
      - name: |
          "MEDIUM | RHEL-08-010290 | AUDIT | The RHEL 8 SSH daemon must be configured to use only Message Authentication Codes (MACs) and ciphers employing FIPS 140-2 validated cryptographic hash algorithms. | Get current FIPS mode state"
          "MEDIUM | RHEL-08-010291 | AUDIT | RHEL 8 must implement DoD-approved encryption to protect the confidentiality of SSH connections | Get current FIPS mode state"
        command: fips-mode-setup --check
        changed_when: false
        failed_when: false
        register: rhel_08_010290_pre_fips_check

      - name: |
          "MEDIUM | RHEL-08-010290 | PATCH | The RHEL 8 SSH daemon must be configured to use only Message Authentication Codes (MACs) and ciphers employing FIPS 140-2 validated cryptographic hash algorithms. | Enable FIPS"
          "MEDIUM | RHEL-08-010291 | PATCH | RHEL 8 must implement DoD-approved encryption to protect the confidentiality of SSH connections | Enable FIPS"
        command: fips-mode-setup --enable
        register: rhel_08_010290_fips_enable
        notify: reboot system
        when: '"disabled" in rhel_08_010290_pre_fips_check.stdout'

      - name: |
          "MEDIUM | RHEL-08-010290 | PATCH | The RHEL 8 SSH daemon must be configured to use only Message Authentication Codes (MACs) and ciphers employing FIPS 140-2 validated cryptographic hash algorithms. | Add ssh ciphers"
          "MEDIUM | RHEL-08-010291 | PATCH | RHEL 8 must implement DoD-approved encryption to protect the confidentiality of SSH connections | Add ssh ciphers"
        lineinfile:
            path: "{{ item.path }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        notify: reboot system
        with_items:
            - { path: /etc/crypto-policies/back-ends/openssh.config, regexp: '^MACs', line: "MACs {{ rhel8stig_ssh_macs_settings }}" }
            - { path: /etc/crypto-policies/back-ends/opensshserver.config, regexp: '^CRYPTO_POLICY=', line: "CRYPTO_POLICY='{{ rhel8stig_ssh_server_crypto_settings }}'" }

- name: "MEDIUM | RHEL-08-010295 | PATCH | The RHEL 8 operating system must implement DoD-approved TLS encryption in the GnuTLS package"
  lineinfile:
      path: /etc/crypto-policies/back-ends/gnutls.config
      regexp: '^(.*\+VERS-ALL:)'
      line: '\1{{ rhel8stig_gnutls_encryption }}'
      backrefs: true
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system

- name: |
        "MEDIUM | RHEL-08-010300 | PATCH | RHEL 8 system commands must have mode 0755 or less permissive."
        "MEDIUM | RHEL-08-010310 | PATCH | RHEL 8 system commands must be owned by root."
        "MEDIUM | RHEL-08-010320 | PATCH | RHEL 8 system commands must be group-owned by root."
  block:
      - name: |
              "MEDIUM | RHEL-08-010300 | AUDIT | RHEL 8 system commands must have mode 0755 or less permissive. | Get commands less permissive"
              "MEDIUM | RHEL-08-010310 | AUDIT | RHEL 8 system commands must be owned by root. | Get commands not owned by root"
              "MEDIUM | RHEL-08-010320 | AUDIT | RHEL 8 system commands must be group-owned by root. | Get commands no group-owned by root"
        shell: "find -L /bin /sbin /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin -perm /0022 -o ! -user root -o ! -group root"
        args:
            warn: no
        changed_when: false
        failed_when: false
        register: rhel_08_010300_commands

      - name: |
              "MEDIUM | RHEL-08-010300 | PATCH | RHEL 8 system commands must have mode 0755 or less permissive. | Set permissions"
              "MEDIUM | RHEL-08-010310 | PATCH | RHEL 8 system commands must be owned by root. | Set permissions"
              "MEDIUM | RHEL-08-010320 | PATCH | RHEL 8 system commands must be group-owned by root. | Set permissions"
        file:
            path: "{{ item }}"
            owner: root
            group: root
            mode: '0755'
            force: yes
        with_items:
            - "{{ rhel_08_010300_commands.stdout_lines }}"

- name: "MEDIUM | RHEL-08-010360 | PATCH | The RHEL 8 file integrity tool must notify the system administrator when changes to the baseline configuration or anomalies in the operation of any security functions are discovered within an organizationally defined frequency."
  cron:
      name: 'Run AIDE integrity check {{ rhel8stig_aide_cron.special_time }}'
      user: "{{ rhel8stig_aide_cron.user }}"
      cron_file: "{{ rhel8stig_aide_cron.cron_file }}"
      job: "{{ rhel8stig_aide_cron.job + ((rhel8stig_aide_cron.notify_by_mail) | ternary(rhel8stig_aide_cron.notify_cmd,'')) }}"
      minute: "{{ rhel8stig_aide_cron.minute | default((rhel8stig_cron_special_disable and
              rhel8stig_aide_cron.special_time in ['hourly', 'daily', 'weekly', 'monthly']) |
              ternary('0', omit)) | default(omit) }}"
      hour: "{{ rhel8stig_aide_cron.hour | default((rhel8stig_cron_special_disable and
              rhel8stig_aide_cron.special_time in ['daily', 'weekly', 'monthly']) |
              ternary('0', omit)) | default(omit) }}"
      weekday: "{{ rhel8stig_aide_cron.weekday | default((rhel8stig_cron_special_disable and
              rhel8stig_aide_cron.special_time in ['weekly']) |
              ternary('0', omit)) | default(omit) }}"
      day: "{{ rhel8stig_aide_cron.day | default((rhel8stig_cron_special_disable and
              rhel8stig_aide_cron.special_time in ['monthly']) |
              ternary('1', omit)) | default(omit) }}"
      special_time: "{{ (rhel8stig_cron_special_disable and
              rhel8stig_aide_cron.special_time in ['hourly', 'daily', 'weekly', 'monthly']) |
              ternary(omit, rhel8stig_aide_cron.special_time) }}"

- name: "HIGH | RHEL-08-010371 | PATCH | RHEL 8 must prevent the installation of software, patches, service packs, device drivers, or operating system components of local packages without verification they have been digitally signed using a certificate that is issued by a Certificate Authority (CA) that is recognized and approved by the organization."
  lineinfile:
      path: /etc/dnf/dnf.conf
      regexp: '^localpkg_gpgcheck='
      line: localpkg_gpgcheck=True

- name: "MEDIUM | RHEL-08-010390 | PATCH | RHEL 8 must have the packages required for multifactor authentication installed."
  block:
      - name: "MEDIUM | RHEL-08-010390 | PATCH | RHEL 8 must have the packages required for multifactor authentication installed. | Install GUI related packages"
        dnf:
            name: esc
            state: present

      - name: "MEDIUM | RHEL-08-010390 | PATCH | RHEL 8 must have the packages required for multifactor authentication installed. | Install non-GUI related packages"
        dnf:
            name: openssl-pkcs11
            state: present

- name: "MEDIUM | RHEL-08-010410 | PATCH | RHEL 8 must accept Personal Identity Verification (PIV) credentials."
  dnf:
      name: opensc
      state: present

- name: "MEDIUM | RHEL-08-010421 | PATCH | RHEL 8 must clear the page allocator to prevent use-after-free attacks."
  block:
      - name: "MEDIUM | RHEL-08-010421 | AUDIT | RHEL 8 must clear the page allocator to prevent use-after-free attacks. | Get GRUB_CMDLINE_LINUX settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -f2 -d'"'
        args:
            warn: no
        changed_when: false
        failed_when: false
        register: rhel8stig_010421_grub_cmdline_linux

      - name: "MEDIUM | RHEL-08-010421 | PATCH | RHEL 8 must clear the page allocator to prevent use-after-free attacks. | Set page poison 1 as active"
        shell: grubby --update-kernel=ALL --args="page_poison=1"

      - name: "MEDIUM | RHEL-08-010421 | PATCH | RHEL 8 must clear the page allocator to prevent use-after-free attacks. | Set page poison 1 for kernel updates if doesn't exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel8stig_010421_grub_cmdline_linux.stdout }} page_poison=1"'
        when: '"page_poison=" not in rhel8stig_010421_grub_cmdline_linux.stdout'

      - name: "MEDIUM | RHEL-08-010421 | PATCH | RHEL 8 must clear the page allocator to prevent use-after-free attacks. | Set page poison 1 for kernel updates if exists"
        replace:
            path: /etc/default/grub
            regexp: 'page_poison=([^\s|"])+'
            replace: "page_poison=1"
        when: '"page_poison=" in rhel8stig_010421_grub_cmdline_linux.stdout'

- name: "MEDIUM | RHEL-08-010422 | PATCH | RHEL 8 must disable virtual syscalls."
  block:
      - name: "MEDIUM | RHEL-08-010422 | AUDIT | RHEL 8 must disable virtual syscalls. | Get GRUB_CMDLINE_LINUX settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -f2 -d'"'
        args:
            warn: no
        changed_when: false
        failed_when: false
        register: rhel8stig_010422_grub_cmdline_linux

      - name: "MEDIUM | RHEL-08-010422 | PATCH | RHEL 8 must disable virtual syscalls. | Set vsyscall none as active"
        shell: grubby --update-kernel=ALL --args="vsyscall=none"

      - name: "MEDIUM | RHEL-08-010422 | PATCH | RHEL 8 must disable virtual syscalls. | Set vsyscall none for kernel updates if doesn't exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel8stig_010422_grub_cmdline_linux.stdout }} vsyscall=none"'
        when: '"vsyscall=" not in rhel8stig_010422_grub_cmdline_linux.stdout'

      - name: "MEDIUM | RHEL-08-010422 | PATCH | RHEL 8 must disable virtual syscalls. | Set vsyscall none for kernel updates if exists"
        replace:
            path: /etc/default/grub
            regexp: 'vsyscall=([^\s|"])+'
            replace: "vsyscall=none"
        when: '"vsyscall=" in rhel8stig_010422_grub_cmdline_linux.stdout'

- name: "MEDIUM | RHEL-08-010423 | PATCH | RHEL 8 must clear SLUB/SLAB objects to prevent use-after-free attacks."
  block:
      - name: "MEDIUM | RHEL-08-010423 | PATCH | RHEL 8 must clear SLUB/SLAB objects to prevent use-after-free attacks. | Get GRUB_CMDLINE_LINUX settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -f2 -d'"'
        args:
            warn: no
        changed_when: false
        failed_when: false
        register: rhel8stig_010423_grub_cmdline_linux

      - name: "MEDIUM | RHEL-08-010423 | PATCH | RHEL 8 must clear SLUB/SLAB objects to prevent use-after-free attacks. | Set slub_debug to P as active"
        shell: grubby --update-kernel=ALL --args="slub_debug=P"

      - name: "MEDIUM | RHEL-08-010423 | PATCH | RHEL 8 must clear SLUB/SLAB objects to prevent use-after-free attacks. | Set slub_debug to P for kernel updates if doesn't exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel8stig_010423_grub_cmdline_linux.stdout }} slub_debug=P"'
        when: '"slub_debug=" not in rhel8stig_010423_grub_cmdline_linux.stdout'

      - name: "MEDIUM | RHEL-08-010423 | PATCH | RHEL 8 must clear SLUB/SLAB objects to prevent use-after-free attacks. | Set slub_debug to P for kernel updates if exists"
        replace:
            path: /etc/default/grub
            regexp: 'slub_debug=([^\s|"])+'
            replace: "slub_debug=P"
        when: '"slub_debug=" in rhel8stig_010423_grub_cmdline_linux.stdout'

- name: "MEDIUM | RHEL-08-010510 | PATCH | The RHEL 8 SSH daemon must not allow compression or must only allow compression after successful authentication."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '(?i)^#?Compression'
      line: 'Compression {{ rhel8stig_sshd_compression }}'
  notify: restart sshd

- name: "MEDIUM | RHEL-08-010520 | PATCH | The RHEL 8 SSH daemon must not allow authentication using known host’s authentication."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '(?i)^#?IgnoreUserKnownHosts'
      line: 'IgnoreUserKnownHosts yes'
  notify: restart sshd

- name: "MEDIUM | RHEL-08-010580 | PATCH | RHEL 8 must prevent special devices on non-root local partitions."
  block:
      - name: "MEDIUM | RHEL-08-010580 | PATCH | RHEL 8 must prevent special devices on non-root local partitions. | Get mounts"
        shell: mount | grep '^/dev\S* on /\S' | grep --invert-match 'nodev' | awk '{print $1,$3,$5,$6}' | sed 's/[()]//g'
        args:
            warn: no
        changed_when: no
        check_mode: no
        register: rhel8stig_010580_mounts_nodev

      - name: "MEDIUM | RHEL-08-010580 | PATCH | RHEL 8 must prevent special devices on non-root local partitions. | Split results"
        set_fact:
            rhel8stig_010580_mounts: "{{ rhel8stig_010580_mounts_nodev.stdout_lines | map('regex_replace', ld_mount_regex, ld_mount_yaml) | map('from_yaml') | list }}"

        with_items: "{{ rhel8stig_010580_mounts_nodev.stdout_lines }}"
        vars:
            ld_mount_regex: >-
                ^(?P<device>[^'']*)\s(?P<mpoint>[^'']*)\s(?P<fs>[^'']*)\s(?P<opts>[^'']*)
            ld_mount_yaml: |
                device: >-4
                    \g<device>
                mpoint: >-4
                    \g<mpoint>
                fs: >-4
                    \g<fs>
                opts: >-4
                    \g<opts>
        when: rhel8stig_010580_mounts_nodev.stdout | length > 0

      - name: "MEDIUM | RHEL-08-010580 | PATCH | RHEL 8 must prevent special devices on non-root local partitions. | Set value"
        mount:
            path: "{{ item.mpoint }}"
            state: mounted
            src: "{{ item.device }}"
            fstype: "{{ item.fs }}"
            opts: "{{ item.opts }},nodev"
        with_items:
            - "{{ rhel8stig_010580_mounts | default([]) }}"
        when:
            - item.device != "/"
            - "'odev' not in item.opts"
            - rhel8stig_010580_mounts_nodev.stdout | length > 0

- name: "MEDIUM | RHEL-08-010590 | PATCH | RHEL 8 must prevent code from being executed on file systems that contain user home directories."
  mount:
      path: /home
      state: mounted
      src: "{{ home_mount.device }}"
      fstype: "{{ home_mount.fstype }}"
      opts: "{{ home_mount.options }},noexec"
  vars:
      home_mount: "{{ ansible_mounts | json_query('[?mount == `/home`] | [0]') }}"

- name: "MEDIUM | RHEL-08-010670 | PATCH | RHEL 8 must disable kernel dumps unless needed."
  service:
      name: kdump
      enabled: no
      state: stopped

- name: "MEDIUM | RHEL-08-010770 | PATCH | All RHEL 8 local initialization files must have mode 0740 or less permissive."
  file:
      path: "{{ item }}"
      mode: 0740
  with_items:
      - "{{ rhel_08_stig_interactive_homedir_inifiles }}"

- name: "MEDIUM | RHEL-08-010830 | PATCH |Unattended or automatic logon to RHEL 8 via ssh must not be allowed."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '(?i)^#?PermitUserEnvironment'
      line: 'PermitUserEnvironment no'
  notify: restart sshd

- name: "MEDIUM | RHEL-020011 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur."
  block:
      - name: "MEDIUM | RHEL-020011 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020011 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020011 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020011 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur. | Set deny in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^deny =|^\# deny ='
            line: "deny = {{ rhel8stig_pam_faillock.attempts }}"

- name: "MEDIUM | RHEL-020013 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period."
  block:
      - name: "MEDIUM | RHEL-020013 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020013 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020013 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020013 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period. | Set fail_interval in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^fail_interval =|^\# fail_interval ='
            line: "fail_interval = {{ rhel8stig_pam_faillock.interval }}"
        with_items:
            - system-auth
            - password-auth

- name: "MEDIUM | RHEL-020015 | PATCH | RHEL 8 must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
  block:
      - name: "MEDIUM | RHEL-020015 | PATCH | RHEL 8 must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020015 | PATCH |RHEL 8 must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020015 | PATCH | RHEL 8 must automatically lock an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020015 | PATCH | RHEL 8 must automatically lock an account when three unsuccessful logon attempts occur during a 15-minute time period. | Set unlock_time in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^unlock_time =|^\# unlock_time ='
            line: "unlock_time = {{ rhel8stig_pam_faillock.unlock_time }}"
        with_items:
            - system-auth
            - password-auth

- name: "MEDIUM | RHEL-020017 | PATCH | RHEL 8 must ensure account lockouts persist."
  block:
      - name: "MEDIUM | RHEL-020017 | PATCH | RHEL 8 must ensure account lockouts persist. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020017 | PATCH | RHEL 8 must ensure account lockouts persist. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020017 | PATCH | RHEL 8 must ensure account lockouts persist. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020017 | PATCH | RHEL 8 must ensure account lockouts persist. | Set dir in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^dir =|^\# dir ='
            line: "dir = /var/log/faillock"
        with_items:
            - system-auth
            - password-auth

- name: "MEDIUM | RHEL-020019| PATCH | RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur."
  block:
      - name: "MEDIUM | RHEL-020019 | PATCH | RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020019 | PATCH | RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020019 | PATCH | RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020019 | PATCH | RHEL 8 must prevent system messages from being presented when three unsuccessful logon attempts occur. | Set silent in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^silent|^\# silent'
            line: "silent"
        with_items:
            - system-auth
            - password-auth

- name: "MEDIUM | RHEL-020020 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur."
  block:
      - name: "MEDIUM | RHEL-020018 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} nlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020020 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock nlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020020 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

- name: "MEDIUM | RHEL-020021| PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur."
  block:
      - name: "MEDIUM | RHEL-020021 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020021 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020021 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020021 | PATCH | RHEL 8 must log user name information when unsuccessful logon attempts occur. | Set audit in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^audit|^\# audit'
            line: "audit"
        with_items:
            - system-auth
            - password-auth

- name: "MEDIUM | RHEL-020023| PATCH | RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period."
  block:
      - name: "MEDIUM | RHEL-020023 | PATCH | RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set preauth"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so preauth'
            line: "auth       required pam_faillock.so preauth dir=/var/log/faillock silent audit deny={{ rhel8stig_pam_faillock.attempts }}{{ (rhel8stig_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}fail_interval={{ rhel8stig_pam_faillock.interval }} unlock_time={{ rhel8stig_pam_faillock.unlock_time }}"
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020023 | PATCH | RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set authfail"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^auth       required pam_faillock.so authfail'
            line: 'auth       required pam_faillock.so authfail dir=/var/log/faillock unlock_time={{ rhel8stig_pam_faillock.unlock_time }}'
            insertafter: '^auth'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020023 | PATCH | RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set account faillock"
        lineinfile:
            path: "/etc/pam.d/{{ item }}"
            regexp: '^account    required pam_faillock.so'
            line: 'account    required pam_faillock.so'
            insertafter: '^account'
        notify: restart sssd
        with_items:
            - system-auth
            - password-auth

      - name: "MEDIUM | RHEL-020023 | PATCH | RHEL 8 must include root when automatically locking an account until the locked account is released by an administrator when three unsuccessful logon attempts occur during a 15-minute time period. | Set audit in faillock.conf"
        lineinfile:
            path: "/etc/security/faillock.conf"
            regexp: '^even_deny_root|^\# even_deny_root'
            line: "even_deny_root"
        with_items:
            - system-auth
            - password-auth

- name: " MEDIUM | RHEL-08-020041 | PATCH | RHEL 8 must ensure session control is automatically started at shell initialization."
  lineinfile:
      path: /etc/bashrc
      regexp: '^\[ -n "$PS1" -a -z "$TMUX" \]'
      line: '[ -n "$PS1" -a -z "$TMUX" ] && exec tmux'
      
- name: "LOW | RHEL-08-020042 | PATCH | RHEL 8 must prevent users from disabling session control mechanisms."
  lineinfile:
      path: /etc/shells
      regexp: 'tmux'
      state: absent

- name: "MEDIUM | RHEL-08-020050 | PATCH | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed."
  block:
      - name: "MEDIUM | RHEL-08-020050 | AUDIT | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed. | Find removal-action param"
        shell: 'grep "removal-action=" /etc/dconf/db/* -R | cut -f1 -d:'
        args:
            warn: no
        changed_when: false
        failed_when: false
        register: rhel_08_020050_removal_action

      - name: "MEDIUM | RHEL-08-020050 | AUDIT | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed. | Find removal-action param"
        shell: "grep removal-action= /etc/dconf/db/* -R | cut -f1 -d: | sed 's:.*/::'"
        changed_when: false
        failed_when: false
        register: rhel_08_020050_removal_action_file

      - name: "MEDIUM | RHEL-08-020050 | PATCH | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed. | Set removal-action param if doesn't exist"
        lineinfile:
            path: /etc/dconf/db/distro.d/20-authselect
            create: yes
            owner: root
            group: root
            mode: 0644
            line: |
                [org/gnome/settings-daemon/peripherals/smartcard]
                removal-action='lock-screen'
        when: rhel_08_020050_removal_action.stdout | length == 0
        notify: dconf update

      - name: "MEDIUM | RHEL-08-020050 | PATCH | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed. | Update removal-action if exists"
        lineinfile:
            path: "{{ rhel_08_020050_removal_action.stdout }}"
            regexp: ^removal-action=
            line: removal-action='lock-screen'
        when: rhel_08_020050_removal_action.stdout | length > 0
        notify: dconf update

      - name: "MEDIUM | RHEL-08-020050 | PATCH | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed. | Set smartcard section of db"
        lineinfile:
            path: '/etc/dconf/db/distro.d/locks/{{ rhel_08_020050_removal_action_file.stdout }}'
            line: /org/gnome/settings-daemon/peripherals/smartcard/removal-action
        when: rhel_08_020050_removal_action_file.stdout | length > 0
        notify: dconf update

      - name: "MEDIUM | RHEL-08-020050 | PATCH | RHEL 8 must be able to initiate directly a session lock for all connection types using smartcard when the smartcard is removed. | Set smartcard section of db"
        lineinfile:
            path: /etc/dconf/db/distro.d/locks/20-authselect
            create: yes
            line: /org/gnome/settings-daemon/peripherals/smartcard/removal-action
            owner: root
            group: root
            mode: 0640
        when: rhel_08_020050_removal_action_file.stdout | length == 0
        notify: dconf update

- name: "MEDIUM | RHEL-08-020100 | PATCH RHEL 8 must ensure a password complexity module is enabled."
  lineinfile:
      path: "{{ item.path }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: '^password'
      owner: root
      group: root
      mode: 0640
  with_items:
      - { path: /etc/pam.d/system-auth, regexp: '^password   required pam_pwquality.so', line: 'password   required pam_pwquality.so retry=3' }
      - { path: /etc/pam.d/password-auth, regexp: '^password   required pam_pwquality.so', line: 'password   required pam_pwquality.so retry=3' }

- name: "MEDIUM | RHEL-08-020160 | PATCH | RHEL 8 must require the change of at least four character classes when passwords are changed."
  lineinfile:
      path: /etc/security/pwquality.conf
      create: yes
      owner: root
      group: root
      mode: 0644
      regexp: '^#?\s*minclass'
      line: "minclass = {{ rhel8stig_password_complexity.minclass | default('4') }}"

- name: "MEDIUM | RHEL-08-020170 | PATCH | RHEL 8 must require the change of at least 8 characters when passwords are changed."
  lineinfile:
      path: /etc/security/pwquality.conf
      create: yes
      owner: root
      group: root
      mode: 0644
      regexp: '^#?\s*difok'
      line: "difok = {{ rhel8stig_password_complexity.difok | default('8') }}"

- name: "MEDIUM | RHEL8-08-020180 | PATCH | RHEL 8 passwords for new users or password changes must have a 24 hours/1 day minimum password lifetime restriction in /etc/shadow."
  block:
      - name: "MEDIUM | RHEL8-08-020180 | AUDIT | RHEL 8 passwords for new users or password changes must have a 24 hours/1 day minimum password lifetime restriction in /etc/shadow. | Get list of users"
        command: "awk -F: '$1 !~ /^root$/ && $2 !~ /^[!*]/ && $4 < 1 {print $1}' /etc/shadow"
        changed_when: false
        failed_when: false
        register: rhel_08_020180_users

      - name: "MEDIUM | RHEL8-08-020180 | PATCH | RHEL 8 passwords for new users or password changes must have a 24 hours/1 day minimum password lifetime restriction in /etc/shadow. | Change user restriction"
        command: chage -m 1 {{ item }}
        with_items: "{{ rhel_08_020180_users.stdout_lines }}"

- name: "MEDIUM | RHEL-08-020190 | PATCH | RHEL 8 passwords for new users or password changes must have a 24 hours/1 day minimum password lifetime restriction in /etc/logins.def."
  lineinfile:
      path: /etc/login.defs
      create: yes
      owner: root
      group: root
      mode: 0644
      regexp: ^#?PASS_MIN_DAYS
      line: "PASS_MIN_DAYS {{ rhel8stig_login_defaults.pass_min_days | default('1') }}"

- name: "MEDIUM | RHEL-08-020200 | PATCH | RHEL 8 user account passwords must have a 60-day maximum password lifetime restriction."
  lineinfile:
      path: /etc/login.defs
      create: yes
      owner: root
      group: root
      mode: 0644
      regexp: ^#?PASS_MAX_DAYS
      line: "PASS_MAX_DAYS {{ rhel8stig_login_defaults.pass_max_days | default('60') }}"

- name: "MEDIUM | RHEL-08-020210 | PATCH | RHEL 8 user account passwords must be configured so that existing passwords are restricted to a 60-day maximum lifetime."
  block:
      - name: "MEDIUM | RHEL-08-020210 | AUDIT | RHEL 8 user account passwords must be configured so that existing passwords are restricted to a 60-day maximum lifetime. | Get list of users"
        command: "awk -F: '$1 !~ /^root$/ && $2 !~ /^[!*]/ && $5 > 60 {print $1}' /etc/shadow"
        check_mode: no
        changed_when: rhel_08_020210_users.stdout | length > 0
        register: rhel_08_020210_users

      - name: "MEDIUM | RHEL-08-020210 | PATCH | RHEL 8 user account passwords must be configured so that existing passwords are restricted to a 60-day maximum lifetime. | Reset password timeout to prevent locking out user."
        command: chage -d '-1 day' {{ item }}
#        check_mode: "{{ rhel8stig_disruptive_check_mode }}"
        with_items: "{{ rhel_08_020210_users.stdout_lines }}"

      - name: "MEDIUM | RHEL-08-020210 | PATCH | RHEL 8 user account passwords must be configured so that existing passwords are restricted to a 60-day maximum lifetime. | Set 60 max lifetime"
        command: chage -M 60 {{ item }}
#        check_mode: "{{ rhel8stig_disruptive_check_mode }}"
        with_items: "{{ rhel_08_020210_users.stdout_lines }}"

- name: "MEDIUM | RHEL-08-20230 | PATCH | RHEL 8 passwords must have a minimum of 15 characters."
  lineinfile:
      path: /etc/security/pwquality.conf
      create: yes
      owner: root
      group: root
      mode: 0644
      regexp: '^#?\s*minlen'
      line: "minlen = {{ rhel8stig_password_complexity.minlen | default('15') }}"

- name: "MEDIUM | RHEL-08-020231 | PATCH | RHEL 8 passwords for new users must have a minimum of 15 characters."
  lineinfile:
      path: /etc/login.defs
      regexp: '^PASS_MIN_LEN|^#PASS_MIN_LEN'
      line: "PASS_MIN_LEN 15"
      owner: root
      group: root
      mode: 0644

- name: "MEDIUM | RHEL-08-020300 | PATCH | RHEL 8 must prevent the use of dictionary words for passwords."
  lineinfile:
      path: /etc/security/pwquality.conf
      create: yes
      regexp: '^#?\s*dictcheck'
      line: "dictcheck = {{ rhel8stig_password_complexity.dictcheck | default('1') }}"
      owner: root
      group: root
      mode: 0644

- name: "MEDIUM | RHEL-08-020310 | PATCH | RHEL 8 must enforce a delay of at least four seconds between logon prompts following a failed logon attempt."
  lineinfile:
      dest: /etc/login.defs
      regexp: ^#?FAIL_DELAY
      line: "FAIL_DELAY {{ rhel8stig_login_defaults.fail_delay_secs | default('4') }}"
      owner: root
      group: root
      mode: 0644

- name: "MEDIUM | RHEL-08-020320 | PATCH | RHEL 8 must not have unnecessary accounts."
  block:
      - name: "MEDIUM | RHEL-08-020320 | AUDIT | RHEL 8 must not have unnecessary accounts. | Find unnecessary accounts"
        command: "grep '^{{ item }}:' /etc/passwd"
        check_mode: no
        failed_when: rhel_08_020320_unnecessary_accounts_found.rc > 1
        changed_when: rhel_08_020320_unnecessary_accounts_found.rc == 0
        register: rhel_08_020320_unnecessary_accounts_found
        with_items: "{{ rhel8stig_unnecessary_accounts }}"


      - name: "MEDIUM | RHEL-08-020320 | PATCH | RHEL 8 must not have unnecessary accounts. | Remove accounts"
        user:
            name: "{{ item }}"
            state: absent
            remove: "{{ rhel8stig_remove_unnecessary_user_files }}"
        register: rhel_08_020320_accounts_removed
        with_items: "{{ rhel8stig_unnecessary_accounts }}"

      - name: "MEDIUM | RHEL-08-020320 | AUDIT | RHEL 8 must not have unnecessary accounts. | Re-parse passwd file"
        include_tasks: parse_etc_passwd.yml
        vars:
            rhel8stig_passwd_tasks: "RHEL-08-020320"
        when: rhel_08_020320_accounts_removed is changed

- name: "LOW | RHEL-08-020340 | PATCH | RHEL 8 must display the date and time of the last successful account logon upon logon."
  block:
      - name: "LOW | RHEL-08-020340 | PATCH | RHEL 8 must display the date and time of the last successful account logon upon logon. | Set session required for pam_lastlog.so"
        pamd:
            name: postlogin
            type: session
            control: optional
            new_control: required
            module_path: pam_lastlog.so
            state: updated

      - name: "LOW | RHEL-08-020340 | PATCH | RHEL 8 must display the date and time of the last successful account logon upon logon. | Remove default=1 and optional control"
        pamd:
            name: postlogin
            type: session
            state: args_absent
            control: "{{ item }}"
            module_path: pam_lastlog.so
            module_arguments: silent
        with_items:
            - '[default=1]'
            - required

- name: "MEDIUM | RHEL-08-020350 | PATCH | RHEL 8 must display the date and time of the last successful account logon upon an SSH logon."
  lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '(?i)^#?PrintLastLog'
      line: 'PrintLastLog yes'
      validate: /usr/sbin/sshd -t -f %s
      owner: root
      group: root
      mode: 0644
  notify: restart sshd

- name: "MEDIUM | RHEL-08-020351 | PATCH |  RHEL 8 must define default permissions for all authenticated users in such a way that the user can only read and modify their own files."
  lineinfile:
      path: /etc/login.defs
      regexp: ^#?UMASK.*
      line: "UMASK           {{ rhel8stig_login_defaults.umask | default('077') }}"
      owner: root
      group: root
      mode: 0644

- name: "MEDIUM | RHEL-08-020353 | PATCH | RHEL 8 must define default permissions for logon and non-logon shells."
  replace:
      path: "{{ item }}"
      regexp: 'umask\s\d\d\d'
      replace: "umask {{ rhel8stig_login_defaults.umask | default('077') }}"
  with_items:
      - /etc/bashrc
      - /etc/csh.cshrc

- name: "MEDIUM | RHEL-08-030040 | PATCH | The RHEL 8 System must take appropriate action when an audit processing failure occurs."
  lineinfile:
      path: /etc/audit/auditd.conf
      regexp: '^disk_error_action ='
      line: "disk_error_action = {{ rhel8stig_auditd_disk_error_action }}"

- name: "MEDIUM | RHEL-08-030050 | PATCH | The RHEL 8 System Administrator (SA) and Information System Security Officer (ISSO) (at a minimum) must be alerted when the audit storage volume is full."
  lineinfile:
      path: /etc/audit/auditd.conf
      regexp: '^max_log_file_action ='
      line: "max_log_file_action = {{ rhel8stig_auditd_max_log_file_action }}"

- name: "MEDIUM | RHEL-08-030060 | PATCH | The RHEL 8 audit system must take appropriate action when the audit storage volume is full."
  lineinfile:
      path: /etc/audit/auditd.conf
      regexp: '^disk_full_action ='
      line: "disk_full_action = {{ rhel8stig_auditd_disk_full_action }}"
      owner: root
      group: root
      mode: 0644

- name: "LOW | RHEL-08-030601 | PATCH | RHEL 8 must enable auditing of processes that start prior to the audit daemon."
  block:
      - name: "LOW | RHEL-08-030601 | AUDIT | RHEL 8 must enable auditing of processes that start prior to the audit daemon. | Get GRUB_CMDLINE_LINUX settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: rhel8stig_030601_grub_cmdline_linux

      - name: "LOW | RHEL-08-030601 | PATCH | RHEL 8 must enable auditing of processes that start prior to the audit daemon. | Set audit to 1 as active"
        shell: grubby --update-kernel=ALL --args="audit=1"
        args:
            warn: no

      - name: "LOW | RHEL-08-030601 | PATCH | RHEL 8 must enable auditing of processes that start prior to the audit daemon. | Set audit=1 for kernel updates if doesnt exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel8stig_030601_grub_cmdline_linux.stdout }} audit=1"'
        when: '"audit=" not in rhel8stig_030601_grub_cmdline_linux.stdout'

      - name: "LOW | RHEL-08-030601 | PATCH | RHEL 8 must enable auditing of processes that start prior to the audit daemon. | Set audit=1 for kernel updates if exists"
        replace:
            path: /etc/default/grub
            regexp: 'audit=([^\s|"])+'
            replace: "audit=1"
        when: '"audit=" in rhel8stig_030601_grub_cmdline_linux.stdout'

- name: "LOW | RHEL-08-030602 | PATCH | RHEL 8 must allocate an audit_backlog_limit of sufficient size to capture processes that start prior to the audit daemon."
  block:
      - name: "LOW | RHEL-08-030602 | AUDIT | RHEL 8 must allocate an audit_backlog_limit of sufficient size to capture processes that start prior to the audit daemon. | Get GRUB_CMDLINE_LINUX settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        register: rhel8stig_030602_grub_cmdline_linux

      - name: "LOW | RHEL-08-030602 | PATCH | RHEL 8 must allocate an audit_backlog_limit of sufficient size to capture processes that start prior to the audit daemon. | set audit_backlog_limit active"
        shell: grubby --update-kernel=ALL --args="audit_backlog_limit=8192"
        args:
            warn: no

      - name: "LOW | RHEL-08-030602 | PATCH | RHEL 8 must allocate an audit_backlog_limit of sufficient size to capture processes that start prior to the audit daemon. | Set audit audit_backlog_limit for kernel updates if doesn't exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel8stig_030602_grub_cmdline_linux.stdout }} audit_backlog_limit=8192"'
        when: '"audit_backlog_limit=" not in rhel8stig_030602_grub_cmdline_linux.stdout'

      - name: "LOW | RHEL-08-030602 | PATCH | RHEL 8 must allocate an audit_backlog_limit of sufficient size to capture processes that start prior to the audit daemon. | Set audit audit_backlog_limit for kernel updates if exists"
        replace:
            path: /etc/default/grub
            regexp: 'audit_backlog_limit=([^\s|"])+'
            replace: "audit_backlog_limit=8192"
        when: '"audit_backlog_limit=" in rhel8stig_030602_grub_cmdline_linux.stdout'

- name: "LOW | RHEL-08-030603 | PATCH | RHEL 8 must enable Linux audit logging for the USBGuard daemon"
  lineinfile:
      path: /etc/usbguard/usbguard-daemon.conf
      regexp: '^AuditBackend='
      line: "AuditBackend=LinuxAudit"
      create: yes
      owner: root
      group: root
      mode: 0600

- name: "MEDIUM | RHEL-08-030650 | PATCH | RHEL 8 must use cryptographic mechanisms to protect the integrity of audit tools."
  lineinfile:
      path: /etc/aide.conf
      line: "{{ item }}"
      owner: root
      group: root
      mode: 0600
  with_items:
      - "# Audit Tools"
      - /usr/sbin/auditctl p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/auditd p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/ausearch p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/aureport p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/autrace p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/audisp-remote p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/audisp-syslog p+i+n+u+g+s+b+acl+xattrs+sha512
      - /usr/sbin/augenrules p+i+n+u+g+s+b+acl+xattrs+sha512

- name: "MEDIUM | RHEL-08-030660 | AUDIT | RHEL 8 must allocate audit record storage capacity to store at least one week of audit records, when audit records are not immediately sent to a central audit record storage facility."
  block:
      - name: "MEDIUM | RHEL-08-030660 | AUDIT | RHEL 8 must allocate audit record storage capacity to store at least one week of audit records, when audit records are not immediately sent to a central audit record storage facility. | Get audit log partition"
        shell: grep log_file /etc/audit/auditd.conf | grep -v max | awk '{print $3}' | sed 's|\(.*\)/.*|\1|'
        changed_when: false
        failed_when: false
        register: rhel_08_030660_audit_log_path

      - name: "MEDIUM | RHEL-08-030660 | AUDIT | RHEL 8 must allocate audit record storage capacity to store at least one week of audit records, when audit records are not immediately sent to a central audit record storage facility. | Get size of audit log partition"
        shell: "df -h {{ rhel_08_030660_audit_log_path.stdout }}"
        changed_when: false
        failed_when: false
        register: rhel_08_030660_audit_log_partition

      - name: "MEDIUM | RHEL-08-030660 | AUDIT | RHEL 8 must allocate audit record storage capacity to store at least one week of audit records, when audit records are not immediately sent to a central audit record storage facility. | Message out partition size"
        debug:
            msg:
                - "ALERT!!!Below is the path and size of the partiion for the audit logs. Please make sure there is enough disk space for logs and logs are on their own partition"
                - "Path: {{ rhel_08_030660_audit_log_path.stdout }}"
                - "Disk Space: {{ rhel_08_030660_audit_log_partition.stdout }}"

- name: "MEDIUM | RHEL-08-030690 | PATCH | The RHEL 8 audit records must be off-loaded onto a different system or storage media from the system being audited."
  lineinfile:
      path: /etc/rsyslog.conf
      regexp: '^.*\@\@'
      line: "*.* @@{{ rhel8stig_remotelog_server.server }}:{{ rhel8stig_remotelog_server.port }}"

- name: "MEDIUM | RHEL-08-03710 | PATCH | RHEL 8 must encrypt the transfer of audit records off-loaded onto a different system or media from the system being audited."
  lineinfile:
      path: /etc/rsyslog.conf
      create: yes
      owner: root
      group: root
      mode: 0644
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
  with_items:
      - { regexp: '^\$DefaultNetstreamDriver', line: '$DefaultNetstreamDriver gtls' }
      - { regexp: '^\$ActionSendStreamDriverMode', line: '$ActionSendStreamDriverMode 1' }

- name: "MEDIUM | RHEL-08-030720 | PATCH | RHEL 8 must authenticate the remote logging server for off-loading audit logs."
  lineinfile:
      path: /etc/rsyslog.conf
      regexp: '^\$ActionSendStreamDriverAuthMode'
      line: "$ActionSendStreamDriverAuthMode x509/name"
  notify: restart_auditd

- name: "MEDIUM | RHEL-08-030730 | PATCH | RHEL 8 must notify the System Administrator (SA) and Information System Security Officer (ISSO) (at a minimum) when allocated audit record storage volume reaches 75 percent of the repository maximum audit record storage capacity."
  lineinfile:
      path: /etc/audit/auditd.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
  with_items:
      - { regexp: '^space_left =', line: 'space_left = 25%' }
      - { regexp: '^space_left_action =', line: 'space_left_action = EMAIL' }

- name: "MEDIUM | RHEL-08-030740 | PATCH | RHEL 8 must compare internal information system clocks at least every 24 hours with a server synchronized to an authoritative time source, such as the United States Naval Observatory (USNO) time servers, or a time server designated for the appropriate DoD network (NIPRNet/SIPRNet), and/or the Global Positioning System (GPS)."
  lineinfile:
      path: /etc/chrony.conf
      regexp: '^server'
      line: 'server {{ rhel8stig_ntp_server_name }} iburst maxpoll 16'
  notify: restart {{ rhel8stig_time_service }}

- name: "LOW | RHEL-08-030741 | PATCH | RHEL 8 must disable the chrony daemon from acting as a server."
  lineinfile:
      path: /etc/chrony.conf
      regexp: '^port|#port'
      line: "port 0"

- name: "LOW | RHEL-08-030742 | PATCH | RHEL 8 must disable network management of the chrony daemon."
  lineinfile:
      path: /etc/chrony.conf
      regexp: '^cmdport|#cmdport'
      line: "cmdport 0"

- name: "LOW | RHEL-08-040004 | PATCH | RHEL 8 must enable mitigations against processor-based vulnerabilities."
  block:
      - name: "LOW | RHEL-08-040004 | PATCH | RHEL 8 must enable mitigations against processor-based vulnerabilities. | Get GRUB_CMDLINE_LINUX settings"
        shell: grep GRUB_CMDLINE_LINUX= /etc/default/grub | cut -f2 -d'"'
        args:
            warn: no
        changed_when: false
        failed_when: false
        register: rhel8stig_040004_grub_cmdline_linux

      - name: "LOW | RHEL-08-040004 | PATCH | RHEL 8 must enable mitigations against processor-based vulnerabilities. | Set pti=on active"
        shell: grubby --update-kernel=ALL --args="pti=on"
        args:
            warn: no

      - name: "LOW | RHEL-08-040004 | PATCH | RHEL 8 must enable mitigations against processor-based vulnerabilities. | Set pti if doesn't exist"
        lineinfile:
            path: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel8stig_040004_grub_cmdline_linux.stdout }} pti=on"'
        when: '"pti=" not in rhel8stig_040004_grub_cmdline_linux.stdout'

      - name: "LOW | RHEL-08-040004 | PATCH | RHEL 8 must enable mitigations against processor-based vulnerabilities. | Set pti exists"
        replace:
            path: /etc/default/grub
            regexp: 'pti=([^\s|"])+'
            replace: "pti=on"
        when: '"pti=" in rhel8stig_040004_grub_cmdline_linux.stdout'

- name: "LOW | RHEL-08-040021 | PATCH | RHEL 8 must disable the asynchronous transfer mode (ATM) protocol."
  lineinfile:
      path: /etc/modprobe.d/blacklist.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system
  with_items:
      - { regexp: '^install ATM', line: 'install ATM /bin/true', insertafter: 'EOF' }
      - { regexp: '^blacklist ATM', line: 'blacklist ATM', insertafter: '^install ATM /bin/true' }

- name: "LOW | RHEL-08-040022 | PATCH | RHEL 8 must disable the controller area network (CAN) protocol."
  lineinfile:
      path: /etc/modprobe.d/blacklist.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system
  with_items:
      - { regexp: '^install CAN', line: 'install CAN /bin/true', insertafter: 'EOF' }
      - { regexp: 'blacklist CAN', line: 'blacklist CAN', insertafter: '^install CAN /bin/true' }

- name: "LOW | RHEL-08-040023 | PATCH | RHEL 8 must disable the stream control transmission (SCTP) protocol."
  lineinfile:
      path: /etc/modprobe.d/blacklist.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system
  with_items:
      - { regexp: '^install SCTP', line: 'install SCTP /bin/true', insertafter: 'EOF' }
      - { regexp: '^blacklist SCTP', line: 'blacklist SCTP', insertafter: '^install SCTP' }

- name: "LOW | RHEL-08-040024 | PATCH | RHEL 8 must disable the transparent inter-process communication (TIPC) protocol."
  lineinfile:
      path: /etc/modprobe.d/blacklist.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system
  with_items:
      - { regexp: '^install TIPC', line: 'install TIPC /bin/true', insertafter: 'EOF' }
      - { regexp: '^blacklist TIPC', line: 'blacklist TIPC', insertafter: '^install TIPC' }

- name: "LOW | RHEL-08-040025 | PATCH | RHEL 8 must disable mounting of cramfs."
  lineinfile:
      path: /etc/modprobe.d/blacklist.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system
  with_items:
      - { regexp: '^install cramfs', line: 'install cramfs /bin/true', insertafter: 'EOF' }
      - { regexp: 'blacklist cramfs', line: 'blacklist cramfs', insertafter: '^install cramfs' }

- name: "LOW | RHEL-08-040026 | PATCH | RHEL 8 must disable IEEE 1394 (FireWire) Support."
  lineinfile:
      path: /etc/modprobe.d/blacklist.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: reboot system
  with_items:
      - { regexp: '^install firewire-core', line: 'install firewire-core /bin/true', insertafter: 'EOF' }
      - { regexp: '^blacklist firewire-core', line: 'blacklist firewire-core', insertafter: '^install firewire-core' }


- name: "MEDIUM | RHEL-08-040080 | PATCH | RHEL 8 must be configured to disable USB mass storage."
  lineinfile:
      path: "{{ item.path }}"
      create: yes
      owner: root
      group: root
      mode: 0640
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      insertafter: "{{ item.insertafter }}"
  with_items:
      - { path: /etc/modprobe.d/usb-storage.conf, regexp: '^install usb-storage', line: 'install usb-storage /bin/true', insertafter: 'EOF' }
      - { path: /etc/modprobe.d/blacklist.conf, regexp: '^blacklist usb-storage', line: 'blacklist usb-storage', insertafter: '#blacklist usb-storage'}

- name: "MEDIUM | RHEL-08-040090 | PATCH | A RHEL 8 firewall must employ a deny-all, allow-by-exception policy for allowing connections to other systems."
  block:
      - name: "MEDIUM | RHEL-08-040090 | PATCH | A RHEL 8 firewall must employ a deny-all, allow-by-exception policy for allowing connections to other systems. | Set new zone"
        firewalld:
            zone: "{{ rhel8stig_custom_firewall_zone }}"
            permanent: true
            state: present

      - name: "MEDIUM | RHEL-08-040090 | PATCH | A RHEL 8 firewall must employ a deny-all, allow-by-exception policy for allowing connections to other systems. | Allow internet and ssh"
        firewalld:
            zone: "{{ rhel8stig_custom_firewall_zone }}"
            permanent: true
            state: enabled
            service: "{{ item }}"
        with_items:
            - "{{ rhel8stig_white_list_services }}"

      - name: "MEDIUM | RHEL-08-040090 | PATCH | A RHEL 8 firewall must employ a deny-all, allow-by-exception policy for allowing connections to other systems. | Reload zones"
        command: firewall-cmd --reload
        changed_when: rhel_08_040090_zone_reload.rc == 0
        failed_when: rhel_08_040090_zone_reload.rc >= 2
        register: rhel_08_040090_zone_reload

      - name: "MEDIUM | RHEL-08-040090 | PATCH | A RHEL 8 firewall must employ a deny-all, allow-by-exception policy for allowing connections to other systems. | Set new zone as default"
        command: "firewall-cmd --set-default-zone={{ rhel8stig_custom_firewall_zone }}"
        changed_when: rhel_08_040090_default_zone_set.rc == 0
        failed_when: rhel_08_040090_default_zone_set.rc >= 2
        register: rhel_08_040090_default_zone_set


- name: "MEDIUM | RHEL-040135 | PATCH | The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs."
  block:
      - name: "MEDIUM | RHEL-040135 | PATCH | The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Install fapolicy"
        dnf:
            name: fapolicyd
            state: present

      - name: "MEDIUM | RHEL-040135 | PATCH | The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Set fapolicy mounts"
        shell: mount | egrep '^tmpfs| ext4| ext3| xfs' | awk '{ printf "%s\n", $3 }' >> /etc/fapolicyd/fapolicyd.mounts
        changed_when: false
        failed_when: false

      - name: "MEDIUM | RHEL-040135 | PATCH | The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Start/enable fapolicy"
        service:
            name: fapolicyd
            state: started
            enabled: yes

      - name: "MEDIUM | RHEL-040135 | PATCH | The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Set fapolicy whitelist "
        lineinfile:
            path: /etc/fapolicyd/fapolicyd.rules
            line: "{{ item }}"
        with_items:
            - "{{ rhel8stig_fapolicy_white_list }}"

      - name: "MEDIUM | RHEL-040135 | PATCH | The RHEL 8 fapolicy module must be configured to employ a deny-all, permit-by-exception policy to allow the execution of authorized software programs. | Set fapolicy permissive 0"
        lineinfile:
            path: /etc/fapolicyd/fapolicyd.conf
            regexp: '^permissive ='
            line: 'permissive = 0'

- name: "MEDIUM | RHEL-08-040150 | PATCH | A firewall must be able to protect against or limit the effects of Denial of Service (DoS) attacks by ensuring RHEL 8 can implement rate-limiting measures on impacted network interfaces."
  block:
      - name: "MEDIUM | RHEL-08-040150 | PATCH | A firewall must be able to protect against or limit the effects of Denial of Service (DoS) attacks by ensuring RHEL 8 can implement rate-limiting measures on impacted network interfaces. | Install nftables"
        dnf:
            name: nftables
            state: present

      - name: "MEDIUM | RHEL-08-040150 | PATCH | A firewall must be able to protect against or limit the effects of Denial of Service (DoS) attacks by ensuring RHEL 8 can implement rate-limiting measures on impacted network interfaces. | Start/Enable nftables"
        service:
            name: nftables
            state: started
            enabled: yes

      - name: "MEDIUM | RHEL-08-040150 | PATCH | A firewall must be able to protect against or limit the effects of Denial of Service (DoS) attacks by ensuring RHEL 8 can implement rate-limiting measures on impacted network interfaces. | Configure FirewallBackend"
        lineinfile:
            path: /etc/firewalld/firewalld.conf
            regexp: '^FirewallBackend='
            line: 'FirewallBackend=nftables'

- name: "HIGH | RHEL-08-040171 | PATCH | The x86 Ctrl-Alt-Delete key sequence in RHEL 8 must be disabled if a graphical user interface is installed."
  block:
      - name: "HIGH | RHEL-08-040171 | PATCH | The x86 Ctrl-Alt-Delete key sequence in RHEL 8 must be disabled if a graphical user interface is installed. | Check for setting existing"
        command: grep -s logout /etc/dconf/db/local.d/*
        changed_when: false
        failed_when: false
        register: rhel_08_040171_logout_settings_status

      - name: "HIGH | RHEL-08-040171 | PATCH | The x86 Ctrl-Alt-Delete key sequence in RHEL 8 must be disabled if a graphical user interface is installed. | Add if missing"
        lineinfile:
            path: /etc/dconf/db/local.d/00-disable-CAD
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
            create: yes
            owner: root
            group: root
            mode: 0644
        with_items:
            - { regexp: '^\[org/gnome/settings-daemon/plugins/media-keys\]', line: '[org/gnome/settings-daemon/plugins/media-keys]', insertafter: 'EOF' }
            - { regexp: 'logout=', line: "logout=''", insertafter: '\[org/gnome/settings-daemon/plugins/media-keys\]' }
        when: rhel_08_040171_logout_settings_status.stdout | length == 0

      - name: "HIGH | RHEL-08-040171 | PATCH | The x86 Ctrl-Alt-Delete key sequence in RHEL 8 must be disabled if a graphical user interface is installed. | Edit if exists"
        replace:
            path: "{{ rhel_08_040171_logout_settings_status.stdout }}"
            regexp: '^[L|l]ogout=.*'
            replace: "logout=''"
        when: rhel_08_040171_logout_settings_status.stdout | length > 0

- name: "MEDIUM | RHEL-08-040260 | PATCH | The RHEL 8 must not be performing packet forwarding unless the system is a router."
  block:
      - name: "MEDIUM | RHEL-08-040260 | PATCH | The RHEL 8 must not be performing packet forwarding unless the system is a router. | Set ip_forward in sysctl"
        sysctl:
            name: "{{ item }}"
            state: present
            value: '0'
            reload: "{{ rhel8stig_sysctl_reload }}"
        with_items:
            - net.ipv4.ip_forward
            - net.ipv6.conf.all.forwarding

      - name: "MEDIUM | RHEL-08-040260 | PATCH | The RHEL 8 must not be performing packet forwarding unless the system is a router. | Set ip_forward value to 0"
        lineinfile:
            path: /etc/sysctl.conf
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
        with_items:
            - { regexp: '^net.ipv4.ip_forward', line: 'net.ipv4.ip_forward=0' }
            - { regexp: '^net.ipv6.conf.all.forwarding', line: 'net.ipv6.conf.all.forwarding=0' }

- name: "MEDIUM | RHEL-08-040290 | PATCH | The RHEL 8 must be configured to prevent unrestricted mail relaying."
  block:
      - name: "MEDIUM | RHEL-08-040290 | AUDIT | The RHEL 8 must be configured to prevent unrestricted mail relaying. | Check if postfix is installed."
        command: rpm -q postfix
        failed_when: no
        check_mode: no
        changed_when: no
        register: rhel_08_040290_rpm_audit

      - name: "MEDIUM | RHEL-08-040290 | PATCH | The RHEL 8 must be configured to prevent unrestricted mail relaying. | Set restriction"
        command: "postconf -e 'smtpd_client_restrictions = permit_mynetworks,reject'"
        check_mode: no
        when: '"postfix-" in rhel_08_040290_rpm_audit.stdout'

- name: |
        "LOW | RHEL-08-040300 | PATCH | The RHEL 8 file integrity tool must be configured to verify extended attributes."
        "LOW | RHEL-08-040310 | PATCH | The RHEL 8 file integrity tool must be configured to verify Access Control Lists (ACLs)."
  template:
      src: aide.conf.j2
      dest: /etc/aide.conf
      owner: root
      group: root
      mode: '0600'

- name: "MEDIUM | RHEL-08-040340 | PATCH | RHEL 8 remote X connections for interactive users must be disabled unless to fulfill documented and validated mission requirements."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '(?i)^#?X11Forwarding'
      line: 'X11Forwarding no'
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: restart sshd

- name: "MEDIUM | RHEL-08-040340 | PATCH | RHEL 8 remote X connections for interactive users must be disabled unless to fulfill documented and validated mission requirements."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '(?i)^#?X11Forwarding'
      line: 'X11Forwarding no'
      create: yes
      owner: root
      group: root
      mode: 0640
  notify: restart sshd

- name: "MEDIUM | RHEL-08-040341 | PATCH | The RHEL 8 SSH daemon must prevent remote hosts from connecting to the proxy display."
  lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '(?i)^#?X11UseLocalhost'
      line: 'X11UseLocalhost yes'

- name: "MEDIUM | RHEL-08-010730 | PATCH | All RHEL 8 local interactive user home directories must have mode 0750 or less permissive."
  block:
      - name: "MEDIUM | RHEL-08-010730 | AUDIT | All RHEL 8 local interactive user home directories must have mode 0750 or less permissive."
        shell: ls -d $(awk -F':' '($3>=1000)&&($1!="nobody"){print $6}' /etc/passwd)
        changed_when: false
        failed_when: false
        register: rhel_08_010730_home_directories

      - name: "MEDIUM | RHEL-08-010730 | PATCH | All RHEL 8 local interactive user home directories must have mode 0750 or less permissive."
        file:
            path: "{{ item }}"
            mode: 0750
        with_items:
            - "{{ rhel_08_010730_home_directories.stdout_lines }}"
        when: rhel_08_010730_home_directories.stdout | length > 0

- name: "MEDIUM | RHEL-08-010100 | PATCH | RHEL 8, for certificate-based authentication, must enforce authorized access to the corresponding private key."
  block:
      - name: "MEDIUM | RHEL-08-010100 | PATCH | RHEL 8, for certificate-based authentication, must enforce authorized access to the corresponding private key. | Create .ssh folder"
        file:
            path: "{{ rhel8stig_path_to_sshkey }}"
            state: directory
            mode: '0700'

      - name: "MEDIUM | RHEL-08-010100 | PATCH | RHEL 8, for certificate-based authentication, must enforce authorized access to the corresponding private key. | Create key pair"
        openssh_keypair:
            path: "{{ rhel8stig_path_to_sshkey }}/id_rsa"
